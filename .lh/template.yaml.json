{
    "sourceFile": "template.yaml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1686081472160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686082589306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,4 +14,18 @@\n       Handler: app.lambda_handler\r\n       Runtime: python3.9\r\n       Architectures:\r\n       - x86_64\r\n+      \r\n+ S3UploadBucket:\r\n+    Type: AWS::S3::Bucket\r\n+    Properties:\r\n+      CorsConfiguration:\r\n+        CorsRules:\r\n+        - AllowedHeaders:\r\n+            - \"*\"\r\n+          AllowedMethods:\r\n+            - GET\r\n+            - PUT\r\n+            - HEAD\r\n+          AllowedOrigins:\r\n+            - \"*\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686083388801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,26 +6,66 @@\n   Sample SAM Template for face-analyzer\r\n \r\n # More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst\r\n Resources:\r\n-  CallFaceRecognitionFunction:\r\n-    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n+  # HTTP API\r\n+  MyApi:\r\n+    Type: AWS::Serverless::HttpApi\r\n     Properties:\r\n-      CodeUri: call_face_recognition/\r\n-      Handler: app.lambda_handler\r\n-      Runtime: python3.9\r\n-      Architectures:\r\n-      - x86_64\r\n-      \r\n- S3UploadBucket:\r\n-    Type: AWS::S3::Bucket\r\n-    Properties:\r\n+      # CORS configuration - this is open for development only and should be restricted in prod.\r\n       CorsConfiguration:\r\n-        CorsRules:\r\n-        - AllowedHeaders:\r\n-            - \"*\"\r\n-          AllowedMethods:\r\n-            - GET\r\n\\ No newline at end of file\n-            - PUT\r\n-            - HEAD\r\n-          AllowedOrigins:\r\n-            - \"*\"\n+        AllowMethods:\r\n+          - GET\r\n+          - POST\r\n+          - DELETE\r\n+          - OPTIONS\r\n+        AllowHeaders:\r\n+          - \"*\"   \r\n+        AllowOrigins: \r\n+          - \"*\"  \r\n+  ## S3 upload lambda function    \r\n+  UploadRequestFunction:\r\n+      # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n+      Type: AWS::Serverless::Function \r\n+      Properties:\r\n+        CodeUri: getSignedURL/\r\n+        Handler: app.handler\r\n+        Runtime: nodejs16.x\r\n+        Timeout: 3\r\n+        MemorySize: 128\r\n+        Environment:\r\n+          Variables:\r\n+            UploadBucket: !Ref S3UploadBucket  \r\n+        Policies:\r\n+          - S3WritePolicy:\r\n+              BucketName: !Ref S3UploadBucket\r\n+        Events:\r\n+          UploadAssetAPI:\r\n+            Type: HttpApi\r\n+            Properties:\r\n+              Path: /uploads\r\n+              Method: get\r\n+              ApiId: !Ref MyApi  \r\n+  ## S3 bucket     \r\n+  S3UploadBucket:\r\n+      Type: AWS::S3::Bucket\r\n+      Properties:\r\n+        CorsConfiguration:\r\n+          CorsRules:\r\n+          - AllowedHeaders:\r\n+              - \"*\"\r\n+            AllowedMethods:\r\n+              - GET\r\n+              - PUT\r\n+              - HEAD\r\n+            AllowedOrigins:\r\n+              - \"*\"\r\n+  \r\n+  # CallFaceRecognitionFunction:\r\n+  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n+  #   Properties:\r\n+  #     CodeUri: call_face_recognition/\r\n+  #     Handler: app.lambda_handler\r\n+  #     Runtime: python3.9\r\n+  #     Architectures:\r\n+  #     - x86_64\r\n+\r\n"
                },
                {
                    "date": 1686085262717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,14 +58,44 @@\n               - PUT\r\n               - HEAD\r\n             AllowedOrigins:\r\n               - \"*\"\r\n-  \r\n-  # CallFaceRecognitionFunction:\r\n-  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n-  #   Properties:\r\n-  #     CodeUri: call_face_recognition/\r\n-  #     Handler: app.lambda_handler\r\n-  #     Runtime: python3.9\r\n-  #     Architectures:\r\n-  #     - x86_64\r\n+   ## face recognition lambda function \r\n+  CallFaceRecognitionFunction:\r\n+    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n+    Properties:\r\n+      CodeUri: callFaceRecognition/\r\n+      Handler: app.lambda_handler\r\n+      Runtime: python3.9\r\n+      Architectures:\r\n+      - x86_64\r\n+      Environment:\r\n+        Variables:\r\n+          UploadBucket: !Ref S3UploadBucket  \r\n+      Policies:\r\n+        - AmazonRekognitionFullAccess\r\n+        # - S3ReadPolicy:\r\n+        #     BucketName: !Ref S3UploadBucket\r\n+      Events:\r\n+        UploadAssetAPI:\r\n+          Type: S3\r\n+          Properties:\r\n+            Bucket: !Ref S3UploadBucket\r\n+            Events:\r\n+              - s3:ObjectCreated:*\r\n+            # Filter:\r\n+            #   S3Key:\r\n+            #     Rules:\r\n+            #       - Name: prefix\r\n+            #         Value: images/\r\n+            #       - Name: suffix\r\n+            #         Value: .jpg\r\n+## Take a note of the outputs for deploying the workflow templates in this sample application\r\n+Outputs:\r\n+  APIendpoint:\r\n+    Description: \"HTTP API endpoint URL\"\r\n+    Value: !Sub \"https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com\"\r\n+  S3UploadBucketName:\r\n+    Description: \"S3 bucket for application uploads\"\r\n+    Value: !Ref 'S3UploadBucket' \r\n \r\n+\r\n"
                },
                {
                    "date": 1686085732298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,13 +81,12 @@\n           Properties:\r\n             Bucket: !Ref S3UploadBucket\r\n             Events:\r\n               - s3:ObjectCreated:*\r\n+            ## Restrict the trigger to objects with a suffix .jpg\r\n             # Filter:\r\n             #   S3Key:\r\n             #     Rules:\r\n-            #       - Name: prefix\r\n-            #         Value: images/\r\n             #       - Name: suffix\r\n             #         Value: .jpg\r\n ## Take a note of the outputs for deploying the workflow templates in this sample application\r\n Outputs:\r\n"
                },
                {
                    "date": 1686127973257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,11 +64,9 @@\n     Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n     Properties:\r\n       CodeUri: callFaceRecognition/\r\n       Handler: app.lambda_handler\r\n-      Runtime: python3.9\r\n-      Architectures:\r\n-      - x86_64\r\n+      Runtime: nodejs16.x\r\n       Environment:\r\n         Variables:\r\n           UploadBucket: !Ref S3UploadBucket  \r\n       Policies:\r\n"
                },
                {
                    "date": 1686128149586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   CallFaceRecognitionFunction:\r\n     Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n     Properties:\r\n       CodeUri: callFaceRecognition/\r\n-      Handler: app.lambda_handler\r\n+      Handler: app.handler\r\n       Runtime: nodejs16.x\r\n       Environment:\r\n         Variables:\r\n           UploadBucket: !Ref S3UploadBucket  \r\n"
                },
                {
                    "date": 1686128213526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,10 @@\n     Properties:\r\n       CodeUri: callFaceRecognition/\r\n       Handler: app.handler\r\n       Runtime: nodejs16.x\r\n+      Timeout: 3\r\n+      MemorySize: 128\r\n       Environment:\r\n         Variables:\r\n           UploadBucket: !Ref S3UploadBucket  \r\n       Policies:\r\n"
                },
                {
                    "date": 1686128443856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,30 +59,30 @@\n               - HEAD\r\n             AllowedOrigins:\r\n               - \"*\"\r\n    ## face recognition lambda function \r\n-  CallFaceRecognitionFunction:\r\n-    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n-    Properties:\r\n-      CodeUri: callFaceRecognition/\r\n-      Handler: app.handler\r\n-      Runtime: nodejs16.x\r\n-      Timeout: 3\r\n-      MemorySize: 128\r\n-      Environment:\r\n-        Variables:\r\n-          UploadBucket: !Ref S3UploadBucket  \r\n-      Policies:\r\n-        - AmazonRekognitionFullAccess\r\n-        # - S3ReadPolicy:\r\n-        #     BucketName: !Ref S3UploadBucket\r\n-      Events:\r\n-        UploadAssetAPI:\r\n-          Type: S3\r\n-          Properties:\r\n-            Bucket: !Ref S3UploadBucket\r\n-            Events:\r\n-              - s3:ObjectCreated:*\r\n+  # CallFaceRecognitionFunction:\r\n+  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n+  #   Properties:\r\n+  #     CodeUri: callFaceRecognition/\r\n+  #     Handler: app.handler\r\n+  #     Runtime: nodejs16.x\r\n+  #     Timeout: 3\r\n+  #     MemorySize: 128\r\n+  #     Environment:\r\n+  #       Variables:\r\n+  #         UploadBucket: !Ref S3UploadBucket  \r\n+  #     Policies:\r\n+  #       - AmazonRekognitionFullAccess\r\n+  #       # - S3ReadPolicy:\r\n+  #       #     BucketName: !Ref S3UploadBucket\r\n+  #     Events:\r\n+  #       UploadAssetAPI:\r\n+  #         Type: S3\r\n+  #         Properties:\r\n+  #           Bucket: !Ref S3UploadBucket\r\n+  #           Events:\r\n+  #             - s3:ObjectCreated:*\r\n             ## Restrict the trigger to objects with a suffix .jpg\r\n             # Filter:\r\n             #   S3Key:\r\n             #     Rules:\r\n"
                },
                {
                    "date": 1686129671035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,30 +59,30 @@\n               - HEAD\r\n             AllowedOrigins:\r\n               - \"*\"\r\n    ## face recognition lambda function \r\n-  # CallFaceRecognitionFunction:\r\n-  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n-  #   Properties:\r\n-  #     CodeUri: callFaceRecognition/\r\n-  #     Handler: app.handler\r\n-  #     Runtime: nodejs16.x\r\n-  #     Timeout: 3\r\n-  #     MemorySize: 128\r\n-  #     Environment:\r\n-  #       Variables:\r\n-  #         UploadBucket: !Ref S3UploadBucket  \r\n-  #     Policies:\r\n-  #       - AmazonRekognitionFullAccess\r\n-  #       # - S3ReadPolicy:\r\n-  #       #     BucketName: !Ref S3UploadBucket\r\n-  #     Events:\r\n-  #       UploadAssetAPI:\r\n-  #         Type: S3\r\n-  #         Properties:\r\n-  #           Bucket: !Ref S3UploadBucket\r\n-  #           Events:\r\n-  #             - s3:ObjectCreated:*\r\n+  CallFaceRecognitionFunction:\r\n+    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n+    Properties:\r\n+      CodeUri: callFaceRecognition/\r\n+      Handler: app.handler\r\n+      Runtime: nodejs16.x\r\n+      Timeout: 3\r\n+      MemorySize: 128\r\n+      Environment:\r\n+        Variables:\r\n+          UploadBucket: !Ref S3UploadBucket  \r\n+      Policies:\r\n+        - AmazonRekognitionFullAccess\r\n+        # - S3ReadPolicy:\r\n+        #     BucketName: !Ref S3UploadBucket\r\n+      Events:\r\n+        UploadAssetAPI:\r\n+          Type: S3\r\n+          Properties:\r\n+            Bucket: !Ref S3UploadBucket\r\n+            Events:\r\n+              - s3:ObjectCreated:*\r\n             ## Restrict the trigger to objects with a suffix .jpg\r\n             # Filter:\r\n             #   S3Key:\r\n             #     Rules:\r\n"
                },
                {
                    "date": 1686131058659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,30 +59,30 @@\n               - HEAD\r\n             AllowedOrigins:\r\n               - \"*\"\r\n    ## face recognition lambda function \r\n-  CallFaceRecognitionFunction:\r\n-    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n-    Properties:\r\n-      CodeUri: callFaceRecognition/\r\n-      Handler: app.handler\r\n-      Runtime: nodejs16.x\r\n-      Timeout: 3\r\n-      MemorySize: 128\r\n-      Environment:\r\n-        Variables:\r\n-          UploadBucket: !Ref S3UploadBucket  \r\n-      Policies:\r\n-        - AmazonRekognitionFullAccess\r\n-        # - S3ReadPolicy:\r\n-        #     BucketName: !Ref S3UploadBucket\r\n-      Events:\r\n-        UploadAssetAPI:\r\n-          Type: S3\r\n-          Properties:\r\n-            Bucket: !Ref S3UploadBucket\r\n-            Events:\r\n-              - s3:ObjectCreated:*\r\n+  # CallFaceRecognitionFunction:\r\n+  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n+  #   Properties:\r\n+  #     CodeUri: callFaceRecognition/\r\n+  #     Handler: app.handler\r\n+  #     Runtime: nodejs16.x\r\n+  #     Timeout: 3\r\n+  #     MemorySize: 128\r\n+  #     Environment:\r\n+  #       Variables:\r\n+  #         UploadBucket: !Ref S3UploadBucket  \r\n+  #     Policies:\r\n+  #       - AmazonRekognitionFullAccess\r\n+  #       # - S3ReadPolicy:\r\n+  #       #     BucketName: !Ref S3UploadBucket\r\n+  #     Events:\r\n+  #       UploadAssetAPI:\r\n+  #         Type: S3\r\n+  #         Properties:\r\n+  #           Bucket: !Ref S3UploadBucket\r\n+  #           Events:\r\n+  #             - s3:ObjectCreated:*\r\n             ## Restrict the trigger to objects with a suffix .jpg\r\n             # Filter:\r\n             #   S3Key:\r\n             #     Rules:\r\n"
                },
                {
                    "date": 1686132127328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,30 +59,30 @@\n               - HEAD\r\n             AllowedOrigins:\r\n               - \"*\"\r\n    ## face recognition lambda function \r\n-  # CallFaceRecognitionFunction:\r\n-  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n-  #   Properties:\r\n-  #     CodeUri: callFaceRecognition/\r\n-  #     Handler: app.handler\r\n-  #     Runtime: nodejs16.x\r\n-  #     Timeout: 3\r\n-  #     MemorySize: 128\r\n-  #     Environment:\r\n-  #       Variables:\r\n-  #         UploadBucket: !Ref S3UploadBucket  \r\n-  #     Policies:\r\n-  #       - AmazonRekognitionFullAccess\r\n-  #       # - S3ReadPolicy:\r\n-  #       #     BucketName: !Ref S3UploadBucket\r\n-  #     Events:\r\n-  #       UploadAssetAPI:\r\n-  #         Type: S3\r\n-  #         Properties:\r\n-  #           Bucket: !Ref S3UploadBucket\r\n-  #           Events:\r\n-  #             - s3:ObjectCreated:*\r\n+  CallFaceRecognitionFunction:\r\n+    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n+    Properties:\r\n+      CodeUri: callFaceRecognition/\r\n+      Handler: app.handler\r\n+      Runtime: nodejs16.x\r\n+      Timeout: 3\r\n+      MemorySize: 128\r\n+      Environment:\r\n+        Variables:\r\n+          UploadBucket: !Ref S3UploadBucket  \r\n+      Policies:\r\n+        - AmazonRekognitionFullAccess\r\n+        # - S3ReadPolicy:\r\n+        #     BucketName: !Ref S3UploadBucket\r\n+      Events:\r\n+        UploadAssetAPI:\r\n+          Type: S3\r\n+          Properties:\r\n+            Bucket: !Ref S3UploadBucket\r\n+            Events:\r\n+              - s3:ObjectCreated:*\r\n             ## Restrict the trigger to objects with a suffix .jpg\r\n             # Filter:\r\n             #   S3Key:\r\n             #     Rules:\r\n"
                },
                {
                    "date": 1686132321389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,15 +74,15 @@\n       Policies:\r\n         - AmazonRekognitionFullAccess\r\n         # - S3ReadPolicy:\r\n         #     BucketName: !Ref S3UploadBucket\r\n-      Events:\r\n-        UploadAssetAPI:\r\n-          Type: S3\r\n-          Properties:\r\n-            Bucket: !Ref S3UploadBucket\r\n-            Events:\r\n-              - s3:ObjectCreated:*\r\n+      # Events:\r\n+      #   UploadAssetAPI:\r\n+      #     Type: S3\r\n+      #     Properties:\r\n+      #       Bucket: !Ref S3UploadBucket\r\n+      #       Events:\r\n+      #         - s3:ObjectCreated:*\r\n             ## Restrict the trigger to objects with a suffix .jpg\r\n             # Filter:\r\n             #   S3Key:\r\n             #     Rules:\r\n"
                },
                {
                    "date": 1686143332347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,13 +67,17 @@\n       Handler: app.handler\r\n       Runtime: nodejs16.x\r\n       Timeout: 3\r\n       MemorySize: 128\r\n-      Environment:\r\n-        Variables:\r\n-          UploadBucket: !Ref S3UploadBucket  \r\n       Policies:\r\n         - AmazonRekognitionFullAccess\r\n+      Events:\r\n+        AnalyzeAssetAPI:\r\n+          Type: HttpApi\r\n+          Properties:\r\n+            Path: /analyze\r\n+            Method: post\r\n+            ApiId: !Ref MyApi \r\n         # - S3ReadPolicy:\r\n         #     BucketName: !Ref S3UploadBucket\r\n       # Events:\r\n       #   UploadAssetAPI:\r\n"
                },
                {
                    "date": 1686143480250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,23 +76,8 @@\n           Properties:\r\n             Path: /analyze\r\n             Method: post\r\n             ApiId: !Ref MyApi \r\n-        # - S3ReadPolicy:\r\n-        #     BucketName: !Ref S3UploadBucket\r\n-      # Events:\r\n-      #   UploadAssetAPI:\r\n-      #     Type: S3\r\n-      #     Properties:\r\n-      #       Bucket: !Ref S3UploadBucket\r\n-      #       Events:\r\n-      #         - s3:ObjectCreated:*\r\n-            ## Restrict the trigger to objects with a suffix .jpg\r\n-            # Filter:\r\n-            #   S3Key:\r\n-            #     Rules:\r\n-            #       - Name: suffix\r\n-            #         Value: .jpg\r\n ## Take a note of the outputs for deploying the workflow templates in this sample application\r\n Outputs:\r\n   APIendpoint:\r\n     Description: \"HTTP API endpoint URL\"\r\n"
                }
            ],
            "date": 1686081472160,
            "name": "Commit-0",
            "content": "AWSTemplateFormatVersion: '2010-09-09'\r\nTransform: AWS::Serverless-2016-10-31\r\nDescription: >\r\n  face-analyzer\r\n\r\n  Sample SAM Template for face-analyzer\r\n\r\n# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst\r\nResources:\r\n  CallFaceRecognitionFunction:\r\n    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n    Properties:\r\n      CodeUri: call_face_recognition/\r\n      Handler: app.lambda_handler\r\n      Runtime: python3.9\r\n      Architectures:\r\n      - x86_64\r\n"
        }
    ]
}