{
    "sourceFile": "frontend/index.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 40,
            "patches": [
                {
                    "date": 1686131607905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686142003889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,12 +14,13 @@\n         <input type=\"file\" @change=\"onFileChange\" accept=\"image/jpeg\">\r\n       </div>\r\n       <div v-else>\r\n         <img :src=\"image\" />\r\n+        <h2 v-if=\"!uploadURL\">Face details : </h2>\r\n         <button v-if=\"!uploadURL\" @click=\"removeImage\">Remove image</button>\r\n         <button v-if=\"!uploadURL\" @click=\"uploadImage\">Upload image</button>\r\n       </div>\r\n-      <h2 v-if=\"uploadURL\">Success! Image uploaded to bucket.</h2>\r\n+      <h2 v-if=\"uploadURL\">Success! Image uploaded to bucket.</h2>      \r\n     </div>\r\n   \r\n     <script>\r\n       const MAX_IMAGE_SIZE = 1000000\r\n@@ -81,8 +82,12 @@\n             })\r\n             console.log('Result: ', result)\r\n             // Final URL for the user doesn't need the query string params\r\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n+          },\r\n+          analyzeImage: async function (e) {\r\n+            console.log('Analyze clicked')\r\n+\r\n           }\r\n         }\r\n       })\r\n     </script>\r\n"
                },
                {
                    "date": 1686142508835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,14 +22,11 @@\n       <h2 v-if=\"uploadURL\">Success! Image uploaded to bucket.</h2>      \r\n     </div>\r\n   \r\n     <script>\r\n-      const MAX_IMAGE_SIZE = 1000000\r\n-\r\n-      /* ENTER YOUR ENDPOINT HERE */\r\n-\r\n-      const API_ENDPOINT = 'https://2jpun75gp1.execute-api.us-east-1.amazonaws.com/uploads' // e.g. https://ab1234ab123.execute-api.us-east-1.amazonaws.com/uploads  \r\n-\r\n+      const MAX_IMAGE_SIZE = 1000000 \r\n+      const API_ENDPOINT_UPLOAD = 'https://2jpun75gp1.execute-api.us-east-1.amazonaws.com/uploads' /* ENTER YOUR ENDPOINT HERE */  \r\n+      const API_ENDPOINT_UPLOAD = ''\r\n       new Vue({\r\n         el: \"#app\",\r\n         data: {\r\n           image: '',\r\n@@ -39,8 +36,9 @@\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n             this.createImage(files[0])\r\n+            this.analyseImage()\r\n           },\r\n           createImage (file) {\r\n             // var image = new Image()\r\n             let reader = new FileReader()\r\n@@ -64,9 +62,9 @@\n             console.log('Upload clicked')\r\n             // Get the presigned URL\r\n             const response = await axios({\r\n               method: 'GET',\r\n-              url: API_ENDPOINT\r\n+              url: API_ENDPOINT_UPLOAD\r\n             })\r\n             console.log('Response: ', response)\r\n             console.log('Uploading: ', this.image)\r\n             let binary = atob(this.image.split(',')[1])\r\n@@ -84,9 +82,13 @@\n             // Final URL for the user doesn't need the query string params\r\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n           analyzeImage: async function (e) {\r\n-            console.log('Analyze clicked')\r\n+            console.log('Analyze start')\r\n+            const response = await axios({\r\n+              method: 'GET',\r\n+              url: API_ENDPOINT\r\n+            })\r\n \r\n           }\r\n         }\r\n       })\r\n"
                },
                {
                    "date": 1686142849350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         <input type=\"file\" @change=\"onFileChange\" accept=\"image/jpeg\">\r\n       </div>\r\n       <div v-else>\r\n         <img :src=\"image\" />\r\n-        <h2 v-if=\"!uploadURL\">Face details : </h2>\r\n+        <h2 v-if=\"analyzed\">Face details : ....</h2>\r\n         <button v-if=\"!uploadURL\" @click=\"removeImage\">Remove image</button>\r\n         <button v-if=\"!uploadURL\" @click=\"uploadImage\">Upload image</button>\r\n       </div>\r\n       <h2 v-if=\"uploadURL\">Success! Image uploaded to bucket.</h2>      \r\n@@ -24,9 +24,9 @@\n   \r\n     <script>\r\n       const MAX_IMAGE_SIZE = 1000000 \r\n       const API_ENDPOINT_UPLOAD = 'https://2jpun75gp1.execute-api.us-east-1.amazonaws.com/uploads' /* ENTER YOUR ENDPOINT HERE */  \r\n-      const API_ENDPOINT_UPLOAD = ''\r\n+      const API_ENDPOINT_FACE_ANALYZE = 'https://2jpun75gp1.execute-api.us-east-1.amazonaws.com/uploads'\r\n       new Vue({\r\n         el: \"#app\",\r\n         data: {\r\n           image: '',\r\n@@ -83,11 +83,13 @@\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n           analyzeImage: async function (e) {\r\n             console.log('Analyze start')\r\n-            const response = await axios({\r\n-              method: 'GET',\r\n-              url: API_ENDPOINT\r\n+            console.log('Uploading to: ')\r\n+\r\n+            const result = await fetch(response.uploadURL, {\r\n+              method: 'POST',\r\n+              body: blobData\r\n             })\r\n \r\n           }\r\n         }\r\n"
                },
                {
                    "date": 1686143218353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,10 @@\n       new Vue({\r\n         el: \"#app\",\r\n         data: {\r\n           image: '',\r\n-          uploadURL: ''\r\n+          uploadURL: '',\r\n+          analyzed: ''\r\n         },\r\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n@@ -83,15 +84,15 @@\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n           analyzeImage: async function (e) {\r\n             console.log('Analyze start')\r\n-            console.log('Uploading to: ')\r\n-\r\n             const result = await fetch(response.uploadURL, {\r\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n \r\n+            console.log('Result: ', result)\r\n+            this.analyzed = true\r\n           }\r\n         }\r\n       })\r\n     </script>\r\n"
                },
                {
                    "date": 1686144892133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   \r\n     <script>\r\n       const MAX_IMAGE_SIZE = 1000000 \r\n       const API_ENDPOINT_UPLOAD = 'https://2jpun75gp1.execute-api.us-east-1.amazonaws.com/uploads' /* ENTER YOUR ENDPOINT HERE */  \r\n-      const API_ENDPOINT_FACE_ANALYZE = 'https://2jpun75gp1.execute-api.us-east-1.amazonaws.com/uploads'\r\n+      const API_ENDPOINT_FACE_ANALYZE = 'https://2jpun75gp1.execute-api.us-east-1.amazonaws.com/analyze'\r\n       new Vue({\r\n         el: \"#app\",\r\n         data: {\r\n           image: '',\r\n"
                },
                {
                    "date": 1686145656134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n             console.log('Result: ', result)\r\n             // Final URL for the user doesn't need the query string params\r\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n-          analyzeImage: async function (e) {\r\n+          analyseImage: async function (e) {\r\n             console.log('Analyze start')\r\n             const result = await fetch(response.uploadURL, {\r\n               method: 'POST',\r\n               body: blobData\r\n"
                },
                {
                    "date": 1686145830312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n           analyseImage: async function (e) {\r\n             console.log('Analyze start')\r\n-            const result = await fetch(response.uploadURL, {\r\n+            const result = await fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n \r\n"
                },
                {
                    "date": 1686145978852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,14 @@\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n           analyseImage: async function (e) {\r\n             console.log('Analyze start')\r\n+            let binary = atob(this.image.split(',')[1])\r\n+            let array = []\r\n+            for (var i = 0; i < binary.length; i++) {\r\n+              array.push(binary.charCodeAt(i))\r\n+            }\r\n+            let blobData = new Blob([new Uint8Array(array)], {type: 'image/jpeg'})\r\n             const result = await fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n"
                },
                {
                    "date": 1686146355436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,9 @@\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n           analyseImage: async function (e) {\r\n             console.log('Analyze start')\r\n+            console.log('Analyze start', this.image)\r\n             let binary = atob(this.image.split(',')[1])\r\n             let array = []\r\n             for (var i = 0; i < binary.length; i++) {\r\n               array.push(binary.charCodeAt(i))\r\n"
                },
                {
                    "date": 1686147030990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n             this.createImage(files[0])\r\n-            this.analyseImage()\r\n+           \r\n           },\r\n           createImage (file) {\r\n             // var image = new Image()\r\n             let reader = new FileReader()\r\n@@ -53,8 +53,10 @@\n               }\r\n               this.image = e.target.result\r\n             }\r\n             reader.readAsDataURL(file)\r\n+\r\n+            this.analyseImage()\r\n           },\r\n           removeImage: function (e) {\r\n             console.log('Remove clicked')\r\n             this.image = ''\r\n"
                },
                {
                    "date": 1686147384982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,9 @@\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n-            this.createImage(files[0])\r\n-           \r\n+            this.createImage(files[0])           \r\n           },\r\n           createImage (file) {\r\n             // var image = new Image()\r\n             let reader = new FileReader()\r\n@@ -84,9 +83,9 @@\n             console.log('Result: ', result)\r\n             // Final URL for the user doesn't need the query string params\r\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n-          analyseImage: async function (e) {\r\n+          analyseImage: await function (e) {\r\n             console.log('Analyze start')\r\n             console.log('Analyze start', this.image)\r\n             let binary = atob(this.image.split(',')[1])\r\n             let array = []\r\n"
                },
                {
                    "date": 1686147401391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,10 @@\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n-            this.createImage(files[0])           \r\n+            this.createImage(files[0]) \r\n+            this.analyseImage()          \r\n           },\r\n           createImage (file) {\r\n             // var image = new Image()\r\n             let reader = new FileReader()\r\n@@ -51,11 +52,9 @@\n                 return alert('Image is loo large.')\r\n               }\r\n               this.image = e.target.result\r\n             }\r\n-            reader.readAsDataURL(file)\r\n-\r\n-            this.analyseImage()\r\n+            reader.readAsDataURL(file)           \r\n           },\r\n           removeImage: function (e) {\r\n             console.log('Remove clicked')\r\n             this.image = ''\r\n"
                },
                {
                    "date": 1686147582056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n             console.log('Result: ', result)\r\n             // Final URL for the user doesn't need the query string params\r\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n-          analyseImage: await function (e) {\r\n+          analyseImage: function (e) {\r\n             console.log('Analyze start')\r\n             console.log('Analyze start', this.image)\r\n             let binary = atob(this.image.split(',')[1])\r\n             let array = []\r\n"
                },
                {
                    "date": 1686147694995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n             for (var i = 0; i < binary.length; i++) {\r\n               array.push(binary.charCodeAt(i))\r\n             }\r\n             let blobData = new Blob([new Uint8Array(array)], {type: 'image/jpeg'})\r\n-            const result = await fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n+            const result = fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n \r\n"
                },
                {
                    "date": 1686153898925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,18 +82,18 @@\n             console.log('Result: ', result)\r\n             // Final URL for the user doesn't need the query string params\r\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n-          analyseImage: function (e) {\r\n+          analyseImage: async function (e) {\r\n             console.log('Analyze start')\r\n             console.log('Analyze start', this.image)\r\n             let binary = atob(this.image.split(',')[1])\r\n             let array = []\r\n             for (var i = 0; i < binary.length; i++) {\r\n               array.push(binary.charCodeAt(i))\r\n             }\r\n             let blobData = new Blob([new Uint8Array(array)], {type: 'image/jpeg'})\r\n-            const result = fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n+            const result = await fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n \r\n"
                },
                {
                    "date": 1686154008357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,11 @@\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n-            this.createImage(files[0]) \r\n-            this.analyseImage()          \r\n+            promise = this.createImage(files[0]) \r\n+            promise.then(this.analyseImage() )\r\n+                     \r\n           },\r\n           createImage (file) {\r\n             // var image = new Image()\r\n             let reader = new FileReader()\r\n"
                },
                {
                    "date": 1686154015110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,18 +83,18 @@\n             console.log('Result: ', result)\r\n             // Final URL for the user doesn't need the query string params\r\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n-          analyseImage: async function (e) {\r\n+          analyseImage: function (e) {\r\n             console.log('Analyze start')\r\n             console.log('Analyze start', this.image)\r\n             let binary = atob(this.image.split(',')[1])\r\n             let array = []\r\n             for (var i = 0; i < binary.length; i++) {\r\n               array.push(binary.charCodeAt(i))\r\n             }\r\n             let blobData = new Blob([new Uint8Array(array)], {type: 'image/jpeg'})\r\n-            const result = await fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n+            const result = fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n \r\n"
                },
                {
                    "date": 1686154146744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n-            promise = this.createImage(files[0]) \r\n+            const promiseA = new Promise(this.createImage(files[0]));\r\n             promise.then(this.analyseImage() )\r\n                      \r\n           },\r\n           createImage (file) {\r\n"
                },
                {
                    "date": 1686154295625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,11 +36,14 @@\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n-            const promiseA = new Promise(this.createImage(files[0]));\r\n-            promise.then(this.analyseImage() )\r\n-                     \r\n+            var p = new Promise((resolve, reject) => { \r\n+              this.createImage(files[0])\r\n+            });\r\n+            p.then(() => {\r\n+              this.analyseImage()\r\n+            })                     \r\n           },\r\n           createImage (file) {\r\n             // var image = new Image()\r\n             let reader = new FileReader()\r\n"
                },
                {
                    "date": 1686154478523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n             var p = new Promise((resolve, reject) => { \r\n               this.createImage(files[0])\r\n             });\r\n             p.then(() => {\r\n-              this.analyseImage()\r\n+              function(value) {this.analyseImage()}\r\n             })                     \r\n           },\r\n           createImage (file) {\r\n             // var image = new Image()\r\n@@ -55,8 +55,9 @@\n               if (e.target.result.length > MAX_IMAGE_SIZE) {\r\n                 return alert('Image is loo large.')\r\n               }\r\n               this.image = e.target.result\r\n+              resolve()\r\n             }\r\n             reader.readAsDataURL(file)           \r\n           },\r\n           removeImage: function (e) {\r\n"
                },
                {
                    "date": 1686154493649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,8 @@\n               if (e.target.result.length > MAX_IMAGE_SIZE) {\r\n                 return alert('Image is loo large.')\r\n               }\r\n               this.image = e.target.result\r\n-              resolve()\r\n             }\r\n             reader.readAsDataURL(file)           \r\n           },\r\n           removeImage: function (e) {\r\n"
                },
                {
                    "date": 1686154545732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,9 @@\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n             var p = new Promise((resolve, reject) => { \r\n               this.createImage(files[0])\r\n+              resolve()\r\n             });\r\n             p.then(() => {\r\n               function(value) {this.analyseImage()}\r\n             })                     \r\n"
                },
                {
                    "date": 1686154569578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n               this.createImage(files[0])\r\n               resolve()\r\n             });\r\n             p.then(() => {\r\n-              function(value) {this.analyseImage()}\r\n+              this.analyseImage()\r\n             })                     \r\n           },\r\n           createImage (file) {\r\n             // var image = new Image()\r\n"
                },
                {
                    "date": 1686154660519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,15 +36,9 @@\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n-            var p = new Promise((resolve, reject) => { \r\n-              this.createImage(files[0])\r\n-              resolve()\r\n-            });\r\n-            p.then(() => {\r\n-              this.analyseImage()\r\n-            })                     \r\n+            this.createImage(files[0])             \r\n           },\r\n           createImage (file) {\r\n             // var image = new Image()\r\n             let reader = new FileReader()\r\n"
                },
                {
                    "date": 1686155028809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,24 +36,29 @@\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n-            this.createImage(files[0])             \r\n+            let promise = this.createImage(files[0])     \r\n+            promise.then(this.analyseImage())        \r\n           },\r\n           createImage (file) {\r\n-            // var image = new Image()\r\n-            let reader = new FileReader()\r\n-            reader.onload = (e) => {\r\n-              console.log('length: ', e.target.result.includes('data:image/jpeg'))\r\n-              if (!e.target.result.includes('data:image/jpeg')) {\r\n-                return alert('Wrong file type - JPG only.')\r\n-              }\r\n-              if (e.target.result.length > MAX_IMAGE_SIZE) {\r\n-                return alert('Image is loo large.')\r\n-              }\r\n-              this.image = e.target.result\r\n-            }\r\n-            reader.readAsDataURL(file)           \r\n+            return new Promise((resolve, reject) => {\r\n+              let reader = new FileReader();\r\n+              reader.onload = (e) => {\r\n+                if (!e.target.result.includes('data:image/jpeg')) {\r\n+                  reject(new Error('Wrong file type - JPG only.'));\r\n+                }\r\n+                if (e.target.result.length > MAX_IMAGE_SIZE) {\r\n+                  reject(new Error('Image is too large.'));\r\n+                }\r\n+                this.image = e.target.result;\r\n+                resolve();\r\n+              };\r\n+              reader.onerror = (error) => {\r\n+                reject(error);\r\n+              };\r\n+              reader.readAsDataURL(file);\r\n+            });          \r\n           },\r\n           removeImage: function (e) {\r\n             console.log('Remove clicked')\r\n             this.image = ''\r\n"
                },
                {
                    "date": 1686157950228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,14 @@\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n             let promise = this.createImage(files[0])     \r\n-            promise.then(this.analyseImage())        \r\n+            this.analyseImage()\r\n+            .then(() => {\r\n+            // Image creation successful\r\n+            console.log('Image created:', this.image);\r\n+            return this.analyseImage(); // Assuming you have the `analyseImage` method\r\n+          })\r\n           },\r\n           createImage (file) {\r\n             return new Promise((resolve, reject) => {\r\n               let reader = new FileReader();\r\n"
                },
                {
                    "date": 1686157962382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,12 +39,12 @@\n             if (!files.length) return\r\n             let promise = this.createImage(files[0])     \r\n             this.analyseImage()\r\n             .then(() => {\r\n-            // Image creation successful\r\n-            console.log('Image created:', this.image);\r\n-            return this.analyseImage(); // Assuming you have the `analyseImage` method\r\n-          })\r\n+              // Image creation successful\r\n+              console.log('Image created:', this.image);\r\n+              return this.analyseImage(); // Assuming you have the `analyseImage` method\r\n+            })\r\n           },\r\n           createImage (file) {\r\n             return new Promise((resolve, reject) => {\r\n               let reader = new FileReader();\r\n"
                },
                {
                    "date": 1686158023956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,9 @@\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n             if (!files.length) return\r\n-            let promise = this.createImage(files[0])     \r\n-            this.analyseImage()\r\n+            this.createImage(files[0])     \r\n             .then(() => {\r\n               // Image creation successful\r\n               console.log('Image created:', this.image);\r\n               return this.analyseImage(); // Assuming you have the `analyseImage` method\r\n"
                },
                {
                    "date": 1686158098854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n             this.createImage(files[0])     \r\n             .then(() => {\r\n               // Image creation successful\r\n               console.log('Image created:', this.image);\r\n-              return this.analyseImage(); // Assuming you have the `analyseImage` method\r\n+              return this.analyseImage(); \r\n             })\r\n           },\r\n           createImage (file) {\r\n             return new Promise((resolve, reject) => {\r\n"
                },
                {
                    "date": 1686158259101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n \r\n-            console.log('Result: ', result)\r\n+            console.log('Result: ', result.response)\r\n             this.analyzed = true\r\n           }\r\n         }\r\n       })\r\n"
                },
                {
                    "date": 1686167683808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,18 @@\n       </div>\r\n       <div v-else>\r\n         <img :src=\"image\" />\r\n         <h2 v-if=\"analyzed\">Face details : ....</h2>\r\n+        <div>\r\n+          <table>\r\n+            <tbody>\r\n+              <tr v-for=\"(value, key) in faceDetails\" :key=\"key\">\r\n+                <td>{{ key }}</td>\r\n+                <td>{{ value }}</td>\r\n+              </tr>\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n         <button v-if=\"!uploadURL\" @click=\"removeImage\">Remove image</button>\r\n         <button v-if=\"!uploadURL\" @click=\"uploadImage\">Upload image</button>\r\n       </div>\r\n       <h2 v-if=\"uploadURL\">Success! Image uploaded to bucket.</h2>      \r\n@@ -30,9 +40,9 @@\n         el: \"#app\",\r\n         data: {\r\n           image: '',\r\n           uploadURL: '',\r\n-          analyzed: ''\r\n+          faceDetails : []\r\n         },\r\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n@@ -92,9 +102,8 @@\n             this.uploadURL = response.uploadURL.split('?')[0]\r\n           },\r\n           analyseImage: function (e) {\r\n             console.log('Analyze start')\r\n-            console.log('Analyze start', this.image)\r\n             let binary = atob(this.image.split(',')[1])\r\n             let array = []\r\n             for (var i = 0; i < binary.length; i++) {\r\n               array.push(binary.charCodeAt(i))\r\n"
                },
                {
                    "date": 1686167709537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,10 +113,9 @@\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n \r\n-            console.log('Result: ', result.response)\r\n-            this.analyzed = true\r\n+            this.faceDetails = result.response\r\n           }\r\n         }\r\n       })\r\n     </script>\r\n"
                },
                {
                    "date": 1686167761031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         <input type=\"file\" @change=\"onFileChange\" accept=\"image/jpeg\">\r\n       </div>\r\n       <div v-else>\r\n         <img :src=\"image\" />\r\n-        <h2 v-if=\"analyzed\">Face details : ....</h2>\r\n+        <h2 v-if=\"faceDetails\">Face details : ....</h2>\r\n         <div>\r\n           <table>\r\n             <tbody>\r\n               <tr v-for=\"(value, key) in faceDetails\" :key=\"key\">\r\n"
                },
                {
                    "date": 1686168026834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         el: \"#app\",\r\n         data: {\r\n           image: '',\r\n           uploadURL: '',\r\n-          faceDetails : []\r\n+          faceDetails : ''\r\n         },\r\n         methods: {\r\n           onFileChange (e) {\r\n             let files = e.target.files || e.dataTransfer.files\r\n"
                },
                {
                    "date": 1686168107261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,8 @@\n             const result = fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n-\r\n             this.faceDetails = result.response\r\n           }\r\n         }\r\n       })\r\n"
                },
                {
                    "date": 1686168126776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,8 +112,9 @@\n             const result = fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n+            console.log(result.response);\r\n             this.faceDetails = result.response\r\n           }\r\n         }\r\n       })\r\n"
                },
                {
                    "date": 1686168604354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,14 +108,19 @@\n             for (var i = 0; i < binary.length; i++) {\r\n               array.push(binary.charCodeAt(i))\r\n             }\r\n             let blobData = new Blob([new Uint8Array(array)], {type: 'image/jpeg'})\r\n-            const result = fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n+            fetch(API_ENDPOINT_FACE_ANALYZE, {\r\n               method: 'POST',\r\n               body: blobData\r\n             })\r\n-            console.log(result.response);\r\n-            this.faceDetails = result.response\r\n+            .then(response => response.json())\r\n+            .then(data => {\r\n+              console.log(data);\r\n+              this.faceDetails = data;\r\n+            })\r\n+\r\n+\r\n           }\r\n         }\r\n       })\r\n     </script>\r\n"
                },
                {
                    "date": 1686168968088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,10 +117,8 @@\n             .then(data => {\r\n               console.log(data);\r\n               this.faceDetails = data;\r\n             })\r\n-\r\n-\r\n           }\r\n         }\r\n       })\r\n     </script>\r\n"
                },
                {
                    "date": 1686169214989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n             })\r\n             .then(response => response.json())\r\n             .then(data => {\r\n               console.log(data);\r\n-              this.faceDetails = data;\r\n+              this.faceDetails = data[0];\r\n             })\r\n           }\r\n         }\r\n       })\r\n"
                },
                {
                    "date": 1686217317727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,16 @@\n         <h2 v-if=\"faceDetails\">Face details : ....</h2>\r\n         <div>\r\n           <table>\r\n             <tbody>\r\n-              <tr v-for=\"(value, key) in faceDetails\" :key=\"key\">\r\n+              <tr v-for=\"(key, value) in faceDetails\" :key=\"key\">\r\n                 <td>{{ key }}</td>\r\n                 <td>{{ value }}</td>\r\n               </tr>\r\n+              <tr v-for=\"(key, value) in faceDetails\" :key=\"key\">\r\n+                <td>{{ key }}</td>\r\n+                <td>{{ value }}</td>\r\n+              </tr>\r\n             </tbody>\r\n           </table>\r\n         </div>\r\n         <button v-if=\"!uploadURL\" @click=\"removeImage\">Remove image</button>\r\n@@ -115,9 +119,9 @@\n             })\r\n             .then(response => response.json())\r\n             .then(data => {\r\n               console.log(data);\r\n-              this.faceDetails = data[0];\r\n+              this.faceDetails = data;\r\n             })\r\n           }\r\n         }\r\n       })\r\n"
                }
            ],
            "date": 1686131607905,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <title>Upload file to S3</title>\r\n    <script src=\"https://unpkg.com/vue@1.0.28/dist/vue.js\"></script>\r\n    <script src=\"https://unpkg.com/axios@0.2.1/dist/axios.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <div id=\"app\">\r\n      <h1>S3 Uploader Test</h1>\r\n  \r\n      <div v-if=\"!image\">\r\n        <h2>Select an image</h2>\r\n        <input type=\"file\" @change=\"onFileChange\" accept=\"image/jpeg\">\r\n      </div>\r\n      <div v-else>\r\n        <img :src=\"image\" />\r\n        <button v-if=\"!uploadURL\" @click=\"removeImage\">Remove image</button>\r\n        <button v-if=\"!uploadURL\" @click=\"uploadImage\">Upload image</button>\r\n      </div>\r\n      <h2 v-if=\"uploadURL\">Success! Image uploaded to bucket.</h2>\r\n    </div>\r\n  \r\n    <script>\r\n      const MAX_IMAGE_SIZE = 1000000\r\n\r\n      /* ENTER YOUR ENDPOINT HERE */\r\n\r\n      const API_ENDPOINT = 'https://2jpun75gp1.execute-api.us-east-1.amazonaws.com/uploads' // e.g. https://ab1234ab123.execute-api.us-east-1.amazonaws.com/uploads  \r\n\r\n      new Vue({\r\n        el: \"#app\",\r\n        data: {\r\n          image: '',\r\n          uploadURL: ''\r\n        },\r\n        methods: {\r\n          onFileChange (e) {\r\n            let files = e.target.files || e.dataTransfer.files\r\n            if (!files.length) return\r\n            this.createImage(files[0])\r\n          },\r\n          createImage (file) {\r\n            // var image = new Image()\r\n            let reader = new FileReader()\r\n            reader.onload = (e) => {\r\n              console.log('length: ', e.target.result.includes('data:image/jpeg'))\r\n              if (!e.target.result.includes('data:image/jpeg')) {\r\n                return alert('Wrong file type - JPG only.')\r\n              }\r\n              if (e.target.result.length > MAX_IMAGE_SIZE) {\r\n                return alert('Image is loo large.')\r\n              }\r\n              this.image = e.target.result\r\n            }\r\n            reader.readAsDataURL(file)\r\n          },\r\n          removeImage: function (e) {\r\n            console.log('Remove clicked')\r\n            this.image = ''\r\n          },\r\n          uploadImage: async function (e) {\r\n            console.log('Upload clicked')\r\n            // Get the presigned URL\r\n            const response = await axios({\r\n              method: 'GET',\r\n              url: API_ENDPOINT\r\n            })\r\n            console.log('Response: ', response)\r\n            console.log('Uploading: ', this.image)\r\n            let binary = atob(this.image.split(',')[1])\r\n            let array = []\r\n            for (var i = 0; i < binary.length; i++) {\r\n              array.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(array)], {type: 'image/jpeg'})\r\n            console.log('Uploading to: ', response.uploadURL)\r\n            const result = await fetch(response.uploadURL, {\r\n              method: 'PUT',\r\n              body: blobData\r\n            })\r\n            console.log('Result: ', result)\r\n            // Final URL for the user doesn't need the query string params\r\n            this.uploadURL = response.uploadURL.split('?')[0]\r\n          }\r\n        }\r\n      })\r\n    </script>\r\n    <style type=\"text/css\">\r\n      body {\r\n        background: #20262E;\r\n        padding: 20px;\r\n        font-family: sans-serif;\r\n      }\r\n      #app {\r\n        background: #fff;\r\n        border-radius: 4px;\r\n        padding: 20px;\r\n        transition: all 0.2s;\r\n        text-align: center;\r\n      }\r\n      #logo {\r\n        width: 100px;\r\n      }\r\n      h2 {\r\n        font-weight: bold;\r\n        margin-bottom: 15px;\r\n      }\r\n      h1, h2 {\r\n        font-weight: normal;\r\n        margin-bottom: 15px;\r\n      }\r\n      a {\r\n        color: #42b983;\r\n      }\r\n      img {\r\n        width: 30%;\r\n        margin: auto;\r\n        display: block;\r\n        margin-bottom: 10px;\r\n      }\r\n    </style>\r\n  </body>\r\n</html>"
        }
    ]
}